public class Solution {
    public int RomanToInt(string s) {
        Dictionary<char, int> rNum = new Dictionary<char, int>{{'I',1},{'V',5},{'X',10},{'L',50},{'C',100},{'D',500},{'M',1000}};
        List<char> stack = new List<char>(s.Length);
        int numR = 0;
        foreach(char a in s)
        {
            stack.Add(a);
            
        }
        for(int i = 0; i < s.Length; i = i+2)
        {
            for(int j = 1; i < s.Length; j = i+1)
            {
                while(rNum[stack[i]] >= rNum[stack[j]])
                {
                    numR = numR + rNum[stack[i]] + rNum[stack[j]];
                }
            }
            if(s.Length%2 != 0)
            {
                numR = numR + rNum[stack[i]];
            }
        }
        return numR;
    }
}

//1, 2, 3, 4, 5, 6, 7
