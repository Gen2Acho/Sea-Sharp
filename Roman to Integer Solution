public class Solution {
    public int RomanToInt(string s) {
        Dictionary<char, int> rNum = new Dictionary<char, int>{{'I',1},{'V',5},{'X',10},{'L',50},{'C',100},{'D',500},{'M',1000}};
        List<char> stack = new List<char>(s.Length);
        foreach(char a in s)
        {
            stack.Add(a);

        }
        int numR = rNum[stack[0]];
        for(int i = 1; i < s.Length; i++)
        {
            if(rNum[stack[i]] > rNum[stack[i-1]])
            {
               numR = numR - (2*(rNum[stack[i-1]])) + rNum[stack[i]]; 
            }
            else
            {
            numR = numR + rNum[stack[i]];
            }
        }
       
        return numR; 
    }
}
